{"ast":null,"code":"import _toConsumableArray from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ankushsaini/Public/btcTransaction/src/PageDefault.js\";\nimport React, { PureComponent } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nvar websocket;\nvar data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'Page C',\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: 'Page D',\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'Page E',\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'Page F',\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\n\nvar AsyncPageDefault =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AsyncPageDefault, _React$Component);\n\n  function AsyncPageDefault(props) {\n    var _this;\n\n    _classCallCheck(this, AsyncPageDefault);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AsyncPageDefault).call(this, props));\n\n    _this.start = function () {\n      console.log('thissss');\n      websocket.send('{\"op\":\"unconfirmed_sub\"}');\n    };\n\n    _this.stop = function (event) {\n      console.log('thissss', event); //websocket.send('{\"op\":\"unconfirmed_unsub\"}');\n\n      _this.setState({\n        connectionStatus: 'disconnected'\n      });\n    };\n\n    _this.updateBtcArray = function (btcData) {\n      var btcArray = _this.state.btcArray;\n\n      var btcArrayCopy = _toConsumableArray(btcArray);\n\n      var timeStamp = btcData.x.time;\n      var btcHash = btcData.x.hash;\n      var out = btcData.x.out;\n      var btcTotalAmount = 0;\n\n      for (var i = 0; i < out.length; i++) {\n        btcTotalAmount += out[i].value;\n      }\n\n      btcTotalAmount /= 100000000;\n      var btcObject = {\n        id: btcHash,\n        amount: btcTotalAmount,\n        timeStamp: timeStamp\n      };\n\n      if (btcTotalAmount > 1) {\n        btcArrayCopy.push(btcObject);\n      }\n\n      if (btcArrayCopy.length > 10) {\n        btcArrayCopy.shift();\n      }\n\n      _this.setState({\n        btcArray: _toConsumableArray(btcArrayCopy)\n      });\n    };\n\n    _this.componentDidMount = function () {\n      websocket = new WebSocket('wss://ws.blockchain.info/inv');\n\n      websocket.onopen = function () {\n        _this.setState({\n          connectionStatus: 'connected'\n        });\n\n        _this.start();\n      };\n\n      websocket.onerror = function () {\n        _this.stop();\n      };\n\n      websocket.onmessage = function (event) {\n        var btcData = JSON.parse(event.data);\n\n        if (btcData.op == 'utx') {\n          _this.updateBtcArray(btcData);\n        } //this.stop(event)\n\n      };\n    };\n\n    _this.state = _this.start.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      connectionStatus: 'connecting...',\n      btcArray: []\n    };\n    return _this;\n  }\n\n  _createClass(AsyncPageDefault, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          connectionStatus = _this$state.connectionStatus,\n          btcArray = _this$state.btcArray;\n      console.log('btcArray', btcArray);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, connectionStatus, React.createElement(LineChart, {\n        width: 1000,\n        height: 500,\n        data: btcArray,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"timeStamp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        dataKey: \"amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"amount\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AsyncPageDefault;\n}(React.Component);\n\nexport { AsyncPageDefault as default };","map":{"version":3,"sources":["/Users/ankushsaini/Public/btcTransaction/src/PageDefault.js"],"names":["React","PureComponent","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","websocket","data","name","uv","pv","amt","AsyncPageDefault","props","start","console","log","send","stop","event","setState","connectionStatus","updateBtcArray","btcData","btcArray","state","btcArrayCopy","timeStamp","x","time","btcHash","hash","out","btcTotalAmount","i","length","value","btcObject","id","amount","push","shift","componentDidMount","WebSocket","onopen","onerror","onmessage","JSON","parse","op","bind","top","right","left","bottom","r","Component"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nlet websocket;\n\nconst data = [\n  {\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n  },\n  {\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n  },\n  {\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n  },\n  {\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n  },\n  {\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n  },\n  {\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n  },\n  {\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n  },\n];\n\nexport default class AsyncPageDefault extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.start.bind(this)\n    this.state = {\n      connectionStatus: 'connecting...',\n      btcArray: []\n    };\n  }\n\n  start = () => {\n    console.log('thissss');\n    websocket.send('{\"op\":\"unconfirmed_sub\"}');\n  }\n\n  stop = (event) => {\n    console.log('thissss',event);\n    //websocket.send('{\"op\":\"unconfirmed_unsub\"}');\n    this.setState({\n      connectionStatus: 'disconnected'\n    })\n  }\n\n  updateBtcArray = (btcData) => {\n    const { btcArray } = this.state\n    let btcArrayCopy = [...btcArray]\n    let timeStamp = btcData.x.time;\n    let btcHash = btcData.x.hash;\n    let out = btcData.x.out;\n    let btcTotalAmount = 0;\n    for(let i = 0; i < out.length; i++){\n      btcTotalAmount += out[i].value;\n    }\n    btcTotalAmount /= 100000000;\n    var btcObject = {id: btcHash, amount: btcTotalAmount, timeStamp: timeStamp };\n    if(btcTotalAmount > 1) {\n      btcArrayCopy.push(btcObject);\n    }\n    if (btcArrayCopy.length > 10) {\n      btcArrayCopy.shift();\n    }\n   this.setState({\n     btcArray: [...btcArrayCopy]\n   })\n  }\n\n  componentDidMount = () => {\n    websocket = new WebSocket('wss://ws.blockchain.info/inv');\n    websocket.onopen = () => {\n      this.setState({\n        connectionStatus: 'connected'\n      })\n      this.start()\n    };\n\n    websocket.onerror = () => {\n      this.stop()\n    };\n\n    websocket.onmessage = (event) => {\n      let btcData = JSON.parse(event.data)\n      if (btcData.op == 'utx'){\n        this.updateBtcArray(btcData)\n      }\n      //this.stop(event)\n    }\n  }\n\n\n\n  render() {\n    const { connectionStatus, btcArray } = this.state\n\n    console.log('btcArray', btcArray);\n    return (\n      <div>\n        {connectionStatus}\n        <LineChart\n          width={1000}\n          height={500}\n          data={btcArray}\n          margin={{\n            top: 5, right: 30, left: 20, bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"timeStamp\" />\n          <YAxis dataKey=\"amount\" />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n      </LineChart>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}