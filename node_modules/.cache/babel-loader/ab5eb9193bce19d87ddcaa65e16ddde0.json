{"ast":null,"code":"import _toConsumableArray from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ankushsaini/Public/btcTransaction/src/PageDefault.js\";\nimport React from 'react';\nvar websocket;\n\nvar AsyncPageDefault =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AsyncPageDefault, _React$Component);\n\n  function AsyncPageDefault(props) {\n    var _this;\n\n    _classCallCheck(this, AsyncPageDefault);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AsyncPageDefault).call(this, props));\n\n    _this.start = function () {\n      console.log('thissss');\n      websocket.send('{\"op\":\"unconfirmed_sub\"}');\n    };\n\n    _this.stop = function (event) {\n      console.log('thissss', event); //websocket.send('{\"op\":\"unconfirmed_unsub\"}');\n\n      _this.setState({\n        connectionStatus: 'disconnected'\n      });\n    };\n\n    _this.updateBtcArray = function (btcData) {\n      var btcArray = _this.state.btcArray;\n\n      var btcArrayCopy = _toConsumableArray(btcArray);\n\n      var timeStamp = btcData.x.time;\n      var btcHash = btcData.x.hash;\n      var out = btcData.x.out;\n      var btcTotalAmount = 0;\n\n      for (var i = 0; i < out.length; i++) {\n        btcTotalAmount += out[i].value;\n      }\n\n      btcTotalAmount /= 100000000;\n      var btcObject = {\n        id: btcHash,\n        value: btcTotalAmount,\n        timeStamp: timeStamp\n      };\n      btcArrayCopy.push(btcObject);\n\n      if (btcArrayCopy.length > 400) {\n        btcArrayCopy.shift();\n      }\n\n      _this.setItem({\n        btcArray: _toConsumableArray(btcArrayCopy)\n      });\n\n      console.log(btcArrayCopy);\n    };\n\n    _this.componentDidMount = function () {\n      websocket = new WebSocket('wss://ws.blockchain.info/inv');\n\n      websocket.onopen = function () {\n        console.log('jdjjdj');\n\n        _this.setState({\n          connectionStatus: 'connected'\n        });\n\n        _this.start();\n      };\n\n      websocket.onerror = function () {\n        _this.stop();\n      };\n\n      websocket.onmessage = function (event) {\n        console.log('event---', JSON.parse(event.data));\n        var btcData = JSON.parse(event.data);\n\n        if (btcData.op == 'utx') {\n          _this.updateBtcArray(btcData);\n        }\n\n        websocket.close();\n\n        _this.stop(event);\n      };\n    };\n\n    _this.state = _this.start.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      connectionStatus: 'connecting...',\n      btcArray: []\n    };\n    return _this;\n  }\n\n  _createClass(AsyncPageDefault, [{\n    key: \"render\",\n    value: function render() {\n      var connectionStatus = this.state.connectionStatus;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, connectionStatus);\n    }\n  }]);\n\n  return AsyncPageDefault;\n}(React.Component);\n\nexport { AsyncPageDefault as default };","map":{"version":3,"sources":["/Users/ankushsaini/Public/btcTransaction/src/PageDefault.js"],"names":["React","websocket","AsyncPageDefault","props","start","console","log","send","stop","event","setState","connectionStatus","updateBtcArray","btcData","btcArray","state","btcArrayCopy","timeStamp","x","time","btcHash","hash","out","btcTotalAmount","i","length","value","btcObject","id","push","shift","setItem","componentDidMount","WebSocket","onopen","onerror","onmessage","JSON","parse","data","op","close","bind","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nlet websocket\n\nexport default class AsyncPageDefault extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.start.bind(this)\n    this.state = {\n      connectionStatus: 'connecting...',\n      btcArray: []\n    };\n  }\n\n  start = () => {\n    console.log('thissss');\n    websocket.send('{\"op\":\"unconfirmed_sub\"}');\n  }\n\n  stop = (event) => {\n    console.log('thissss',event);\n    //websocket.send('{\"op\":\"unconfirmed_unsub\"}');\n    this.setState({\n      connectionStatus: 'disconnected'\n    })\n  }\n\n  updateBtcArray = (btcData) => {\n    const { btcArray } = this.state\n    let btcArrayCopy = [...btcArray]\n    let timeStamp = btcData.x.time;\n    let btcHash = btcData.x.hash;\n    let out = btcData.x.out;\n    let btcTotalAmount = 0;\n    for(let i = 0; i < out.length; i++){\n      btcTotalAmount += out[i].value;\n    }\n    btcTotalAmount /= 100000000;\n    var btcObject = {id: btcHash, value: btcTotalAmount, timeStamp: timeStamp };\n    btcArrayCopy.push(btcObject);\n    if (btcArrayCopy.length > 400) {\n     btcArrayCopy.shift();\n   }\n   this.setItem({\n     btcArray: [...btcArrayCopy]\n   })\n    console.log(btcArrayCopy);\n  }\n\n  componentDidMount = () => {\n    websocket = new WebSocket('wss://ws.blockchain.info/inv');\n    websocket.onopen = () => {\n      console.log('jdjjdj');\n      this.setState({\n        connectionStatus: 'connected'\n      })\n      this.start()\n    };\n\n    websocket.onerror = () => {\n      this.stop()\n    };\n\n    websocket.onmessage = (event) => {\n      console.log('event---',JSON.parse(event.data));\n      let btcData = JSON.parse(event.data)\n      if (btcData.op == 'utx'){\n        this.updateBtcArray(btcData)\n      }\n      websocket.close();\n      this.stop(event)\n    }\n  }\n\n\n\n  render() {\n    const { connectionStatus } = this.state\n    return (\n      <div>\n        {connectionStatus}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}