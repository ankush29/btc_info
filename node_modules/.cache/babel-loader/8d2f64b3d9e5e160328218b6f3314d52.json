{"ast":null,"code":"var _jsxFileName = \"/Users/ankushsaini/Public/btcTransaction/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Loadable from 'react-loadable';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { CookiesProvider } from 'react-cookie'; // import './index.scss';\n\nimport App from './App';\nimport { store } from './store/configureStore'; // import registerServiceWorker from './registerServiceWorker';\n// const store = configureStore(window.__REDUX_STATE__ || {});\n\nvar AppBundle = React.createElement(ReduxProvider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(CookiesProvider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}))));\n\nwindow.onload = function () {\n  Loadable.preloadReady().then(function () {\n    var renderMethod = module.hot ? ReactDOM.render : ReactDOM.hydrate;\n    renderMethod(AppBundle, document.getElementById('root'));\n  });\n}; // registerServiceWorker();","map":{"version":3,"sources":["/Users/ankushsaini/Public/btcTransaction/src/index.js"],"names":["React","ReactDOM","Loadable","Provider","ReduxProvider","BrowserRouter","CookiesProvider","App","store","AppBundle","window","onload","preloadReady","then","renderMethod","module","hot","render","hydrate","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,QAAQ,IAAIC,aAArB,QAA0C,aAA1C;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,eAAT,QAAgC,cAAhC,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,KAAT,QAAsB,wBAAtB,C,CACA;AAEA;;AAEA,IAAMC,SAAS,GACb,oBAAC,aAAD;AAAe,EAAA,KAAK,EAAED,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF;;AAUAE,MAAM,CAACC,MAAP,GAAgB,YAAM;AACpBT,EAAAA,QAAQ,CAACU,YAAT,GAAwBC,IAAxB,CAA6B,YAAM;AACjC,QAAMC,YAAY,GAAGC,MAAM,CAACC,GAAP,GAAaf,QAAQ,CAACgB,MAAtB,GAA+BhB,QAAQ,CAACiB,OAA7D;AACAJ,IAAAA,YAAY,CAACL,SAAD,EAAYU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAZ,CAAZ;AACD,GAHD;AAID,CALD,C,CAOA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Loadable from 'react-loadable';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { CookiesProvider } from 'react-cookie';\n\n// import './index.scss';\nimport App from './App';\nimport { store } from './store/configureStore';\n// import registerServiceWorker from './registerServiceWorker';\n\n// const store = configureStore(window.__REDUX_STATE__ || {});\n\nconst AppBundle = (\n  <ReduxProvider store={store}>\n    <BrowserRouter>\n      <CookiesProvider>\n        <App />\n      </CookiesProvider>\n    </BrowserRouter>\n  </ReduxProvider>\n);\n\nwindow.onload = () => {\n  Loadable.preloadReady().then(() => {\n    const renderMethod = module.hot ? ReactDOM.render : ReactDOM.hydrate;\n    renderMethod(AppBundle, document.getElementById('root'));\n  });\n};\n\n// registerServiceWorker();\n"]},"metadata":{},"sourceType":"module"}