{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var XhrPollingReceiver,\n      XhrStreamingReceiver,\n      transport,\n      utils,\n      extend = function extend(child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  transport = require('./transport');\n  utils = require('./utils');\n\n  XhrStreamingReceiver = function (superClass) {\n    extend(XhrStreamingReceiver, superClass);\n\n    function XhrStreamingReceiver() {\n      return XhrStreamingReceiver.__super__.constructor.apply(this, arguments);\n    }\n\n    XhrStreamingReceiver.prototype.protocol = \"xhr-streaming\";\n\n    XhrStreamingReceiver.prototype.doSendFrame = function (payload) {\n      return XhrStreamingReceiver.__super__.doSendFrame.call(this, payload + '\\n');\n    };\n\n    return XhrStreamingReceiver;\n  }(transport.ResponseReceiver);\n\n  XhrPollingReceiver = function (superClass) {\n    extend(XhrPollingReceiver, superClass);\n\n    function XhrPollingReceiver() {\n      return XhrPollingReceiver.__super__.constructor.apply(this, arguments);\n    }\n\n    XhrPollingReceiver.prototype.protocol = \"xhr-polling\";\n    XhrPollingReceiver.prototype.max_response_size = 1;\n    return XhrPollingReceiver;\n  }(XhrStreamingReceiver);\n\n  exports.app = {\n    xhr_options: function xhr_options(req, res) {\n      res.statusCode = 204;\n      res.setHeader('Access-Control-Allow-Methods', 'OPTIONS, POST');\n      res.setHeader('Access-Control-Max-Age', res.cache_for);\n      return '';\n    },\n    xhr_send: function xhr_send(req, res, data) {\n      var d, i, jsonp, len, message, x;\n\n      if (!data) {\n        throw {\n          status: 500,\n          message: 'Payload expected.'\n        };\n      }\n\n      try {\n        d = JSON.parse(data);\n      } catch (error) {\n        x = error;\n        throw {\n          status: 500,\n          message: 'Broken JSON encoding.'\n        };\n      }\n\n      if (!d || d.__proto__.constructor !== Array) {\n        throw {\n          status: 500,\n          message: 'Payload expected.'\n        };\n      }\n\n      jsonp = transport.Session.bySessionId(req.session);\n\n      if (!jsonp) {\n        throw {\n          status: 404\n        };\n      }\n\n      for (i = 0, len = d.length; i < len; i++) {\n        message = d[i];\n        jsonp.didMessage(message);\n      }\n\n      res.setHeader('Content-Type', 'text/plain; charset=UTF-8');\n      res.writeHead(204);\n      res.end();\n      return true;\n    },\n    xhr_cors: function xhr_cors(req, res, content) {\n      var headers, origin;\n\n      if (this.options.disable_cors) {\n        return content;\n      }\n\n      if (!req.headers['origin']) {\n        origin = '*';\n      } else {\n        origin = req.headers['origin'];\n        res.setHeader('Access-Control-Allow-Credentials', 'true');\n      }\n\n      res.setHeader('Access-Control-Allow-Origin', origin);\n      res.setHeader('Vary', 'Origin');\n      headers = req.headers['access-control-request-headers'];\n\n      if (headers) {\n        res.setHeader('Access-Control-Allow-Headers', headers);\n      }\n\n      return content;\n    },\n    xhr_poll: function xhr_poll(req, res, _, next_filter) {\n      res.setHeader('Content-Type', 'application/javascript; charset=UTF-8');\n      res.writeHead(200);\n      transport.register(req, this, new XhrPollingReceiver(req, res, this.options));\n      return true;\n    },\n    xhr_streaming: function xhr_streaming(req, res, _, next_filter) {\n      res.setHeader('Content-Type', 'application/javascript; charset=UTF-8');\n      res.writeHead(200);\n      res.write(Array(2049).join('h') + '\\n');\n      transport.register(req, this, new XhrStreamingReceiver(req, res, this.options));\n      return true;\n    }\n  };\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}