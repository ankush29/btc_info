{"ast":null,"code":"import _classCallCheck from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ankushsaini/Public/btcTransaction/src/PageDefault.js\";\nimport React from 'react';\nimport sockjs from 'sockjs';\nvar socket = sockjs('wss://ws.blockchain.info/inv');\nvar ws = Stomp.over(socket);\n\nvar WebSocket =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WebSocket, _React$Component);\n\n  function WebSocket() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WebSocket);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WebSocket)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ws: ws,\n      timeStamp: Date.now(),\n      maxReconnect: 1\n    };\n\n    _this.setupWebSocket = function () {\n      debugger;\n      var webSoc = _this.state.ws;\n      webSoc.connect({}, _this.connect);\n\n      webSoc.message = function (body) {\n        return _this.setState({\n          timeStamp: Date.now()\n        });\n      };\n\n      webSoc.error = function (err) {\n        if (_this.state.maxReconnect > 0) {\n          _this.setState({\n            maxReconnect: _this.state.maxReconnect - 1\n          }, _this.connect);\n        }\n      };\n    };\n\n    _this.connect = function () {\n      var channels = webSocketUrls[_this.props.name];\n\n      _this.setState({\n        maxReconnect: _this.props.maxReconnect\n      });\n\n      channels.forEach(function (channel) {\n        var webSoc = _this.state.ws;\n        webSoc.subscribe(channel.route, channel.callback);\n        webSoc.send(registration.route, {\n          timeStamp: _this.state.timeStamp.toString()\n        }, 'timeStamp');\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(WebSocket, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setupWebSocket();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return WebSocket;\n}(React.Component);\n\nexport { WebSocket as default };\nWebSocket.defaultProps = {\n  name: 'something',\n  maxReconnect: 5\n};","map":{"version":3,"sources":["/Users/ankushsaini/Public/btcTransaction/src/PageDefault.js"],"names":["React","sockjs","socket","ws","Stomp","over","WebSocket","state","timeStamp","Date","now","maxReconnect","setupWebSocket","webSoc","connect","message","body","setState","error","err","channels","webSocketUrls","props","name","forEach","channel","subscribe","route","callback","send","registration","toString","Component","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,IAAMC,MAAM,GAAGD,MAAM,CAAC,8BAAD,CAArB;AACA,IAAME,EAAE,GAAGC,KAAK,CAACC,IAAN,CAAWH,MAAX,CAAX;;IAEqBI,S;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNJ,MAAAA,EAAE,EAAFA,EADM;AAENK,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAFL;AAGNC,MAAAA,YAAY,EAAC;AAHP,K;;UAQRC,c,GAAiB,YAAM;AACrB;AACA,UAAMC,MAAM,GAAG,MAAKN,KAAL,CAAWJ,EAA1B;AACAU,MAAAA,MAAM,CAACC,OAAP,CAAe,EAAf,EAAmB,MAAKA,OAAxB;;AACAD,MAAAA,MAAM,CAACE,OAAP,GAAiB,UAACC,IAAD;AAAA,eAAU,MAAKC,QAAL,CAAc;AAAET,UAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAAb,SAAd,CAAV;AAAA,OAAjB;;AACAG,MAAAA,MAAM,CAACK,KAAP,GAAe,UAACC,GAAD,EAAS;AACtB,YAAI,MAAKZ,KAAL,CAAWI,YAAX,GAA0B,CAA9B,EAAiC;AAC/B,gBAAKM,QAAL,CAAc;AAAEN,YAAAA,YAAY,EAAE,MAAKJ,KAAL,CAAWI,YAAX,GAA0B;AAA1C,WAAd,EAA6D,MAAKG,OAAlE;AACD;AACF,OAJD;AAKD,K;;UAEFA,O,GAAU,YAAM;AACd,UAAMM,QAAQ,GAAGC,aAAa,CAAC,MAAKC,KAAL,CAAWC,IAAZ,CAA9B;;AACA,YAAKN,QAAL,CAAc;AAAEN,QAAAA,YAAY,EAAE,MAAKW,KAAL,CAAWX;AAA3B,OAAd;;AACAS,MAAAA,QAAQ,CAACI,OAAT,CAAiB,UAACC,OAAD,EAAa;AAC5B,YAAMZ,MAAM,GAAC,MAAKN,KAAL,CAAWJ,EAAxB;AACAU,QAAAA,MAAM,CAACa,SAAP,CAAiBD,OAAO,CAACE,KAAzB,EAAgCF,OAAO,CAACG,QAAxC;AACAf,QAAAA,MAAM,CAACgB,IAAP,CAAYC,YAAY,CAACH,KAAzB,EAAgC;AAAEnB,UAAAA,SAAS,EAAY,MAAKD,KAAL,CAAWC,SAAX,CAAqBuB,QAArB;AAAvB,SAAhC,EAA0F,WAA1F;AACA,OAJF;AAKA,K;;;;;;;wCAvBmB;AAClB,WAAKnB,cAAL;AACD;;;6BAsBQ;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAhCoCZ,KAAK,CAACgC,S;;SAAxB1B,S;AAkCrBA,SAAS,CAAC2B,YAAV,GAAyB;AACvBV,EAAAA,IAAI,EAAE,WADiB;AAEvBZ,EAAAA,YAAY,EAAE;AAFS,CAAzB","sourcesContent":["import React from 'react';\nimport sockjs from 'sockjs';\n\nconst socket = sockjs('wss://ws.blockchain.info/inv');\nconst ws = Stomp.over(socket);\n\nexport default class WebSocket extends React.Component {\n  state = {\n    ws,\n    timeStamp: Date.now(),\n    maxReconnect:1\n  };\n  componentDidMount() {\n    this.setupWebSocket();\n  }\n  setupWebSocket = () => {\n    debugger\n    const webSoc = this.state.ws;\n    webSoc.connect({}, this.connect);\n    webSoc.message = (body) => this.setState({ timeStamp: Date.now()});\n    webSoc.error = (err) => {\n      if (this.state.maxReconnect > 0) {\n        this.setState({ maxReconnect: this.state.maxReconnect - 1 }, this.connect);\n      }\n    };\n  }\n\n connect = () => {\n   const channels = webSocketUrls[this.props.name];\n   this.setState({ maxReconnect: this.props.maxReconnect });\n   channels.forEach((channel) => {\n     const webSoc=this.state.ws;\n     webSoc.subscribe(channel.route, channel.callback);\n     webSoc.send(registration.route, { timeStamp:           this.state.timeStamp.toString() }, 'timeStamp');\n    });\n  }\n  render() {\n    return <span />;\n  }\n}\nWebSocket.defaultProps = {\n  name: 'something',\n  maxReconnect: 5,\n};\n"]},"metadata":{},"sourceType":"module"}