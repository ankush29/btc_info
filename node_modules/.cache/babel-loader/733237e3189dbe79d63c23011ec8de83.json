{"ast":null,"code":"import _classCallCheck from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ankushsaini/Public/btcTransaction/src/components/FindBtc.js\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nvar classes = {\n  root: {\n    width: '100%'\n  },\n  paper: {\n    // marginTop: theme.spacing(3),\n    width: '100%',\n    overflowX: 'auto' // marginBottom: theme.spacing(2),\n\n  },\n  table: {\n    minWidth: 650\n  }\n};\n\nvar FindBtc =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FindBtc, _React$Component);\n\n  function FindBtc(props) {\n    var _this;\n\n    _classCallCheck(this, FindBtc);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FindBtc).call(this, props));\n\n    _this._handleBtcValue = function (ev) {\n      _this.setState({\n        btcAmount: ev.target.value,\n        error: ''\n      });\n    };\n\n    _this._findBtc = function (ev) {\n      var btcAmount = _this.state.btcAmount;\n      var amountRegex = /^[+-]?\\d+(\\.\\d+)?$/.test(btcAmount);\n\n      if (amountRegex) {\n        _this._getValue(btcAmount);\n      } else {\n        _this.setState({\n          error: 'Please Enter Valid Number. eg(12,1.2,0.12)',\n          outputArray: []\n        });\n      }\n    };\n\n    _this._getValue = function (btcAmount) {\n      var btcArray = _this.props.btcArray;\n      var outputArray = [];\n      var newArray = btcArray.slice();\n      var count = 0;\n\n      var _loop = function _loop() {\n        var ouput = newArray.reduce(function (prev, curr, index) {\n          return Math.abs(curr.amount - btcAmount) < Math.abs(prev.amount - btcAmount) ? curr : prev;\n        });\n        newArray = newArray.filter(function (item) {\n          if (item.id !== ouput.id) {\n            return item;\n          }\n        });\n        outputArray.push(ouput);\n        count++;\n      };\n\n      while (count < 3 && newArray.length) {\n        _loop();\n      }\n\n      _this.setState({\n        outputArray: outputArray\n      });\n\n      console.log('outputArray----', outputArray, 'btcAmount---', btcAmount);\n    };\n\n    _this.state = {\n      btcAmount: '',\n      error: '',\n      outputArray: []\n    };\n    return _this;\n  }\n\n  _createClass(FindBtc, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          btcAmount = _this$state.btcAmount,\n          error = _this$state.error,\n          outputArray = _this$state.outputArray;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Find BTC by Value\"), React.createElement(TextField, {\n        id: \"standard-search\",\n        label: \"Enter Amount\",\n        type: \"search\",\n        margin: \"normal\",\n        onChange: this._handleBtcValue,\n        value: btcAmount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this._findBtc,\n        className: \"findBtcButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Find BTC\"), React.createElement(\"p\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, error), outputArray.forEach(function (item, index) {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        });\n      }), React.createElement(\"div\", {\n        style: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        style: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Table, {\n        style: classes.table,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"HASH\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"AMOUNT\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"TIME STAMP\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, outputArray.map(function (btc) {\n        return React.createElement(TableRow, {\n          key: btc.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, btc.id), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, btc.amount), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, btc.timeStamp));\n      }))))));\n    }\n  }]);\n\n  return FindBtc;\n}(React.Component);\n\nexport { FindBtc as default };","map":{"version":3,"sources":["/Users/ankushsaini/Public/btcTransaction/src/components/FindBtc.js"],"names":["React","TextField","Table","TableBody","TableCell","TableHead","TableRow","Paper","Button","classes","root","width","paper","overflowX","table","minWidth","FindBtc","props","_handleBtcValue","ev","setState","btcAmount","target","value","error","_findBtc","state","amountRegex","test","_getValue","outputArray","btcArray","newArray","slice","count","ouput","reduce","prev","curr","index","Math","abs","amount","filter","item","id","push","length","console","log","forEach","map","btc","timeStamp","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nconst classes = {\n  root: {\n    width: '100%',\n  },\n  paper: {\n    // marginTop: theme.spacing(3),\n    width: '100%',\n    overflowX: 'auto',\n    // marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 650,\n  },\n};\n\nexport default class FindBtc extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      btcAmount: '',\n      error: '',\n      outputArray: []\n    }\n  }\n\n  _handleBtcValue = (ev) => {\n\n    this.setState({\n      btcAmount: ev.target.value,\n      error: ''\n    })\n  }\n\n  _findBtc = (ev) => {\n    const { btcAmount } = this.state\n    const amountRegex = /^[+-]?\\d+(\\.\\d+)?$/.test(btcAmount)\n    if(amountRegex) {\n      this._getValue(btcAmount)\n    } else {\n      this.setState({\n        error: 'Please Enter Valid Number. eg(12,1.2,0.12)',\n        outputArray: []\n      })\n    }\n  }\n\n  _getValue = (btcAmount) => {\n    const { btcArray } = this.props;\n    let outputArray = []\n    let newArray = btcArray.slice();\n    let count = 0;\n    while (count < 3 && newArray.length) {\n      let ouput = newArray.reduce((prev, curr, index) => Math.abs(curr.amount - btcAmount) < Math.abs(prev.amount - btcAmount) ? curr : prev);\n      newArray = newArray.filter((item) => {\n        if(item.id !== ouput.id) {\n          return item\n        }\n      })\n      outputArray.push(ouput)\n      count++;\n    }\n    this.setState({\n      outputArray\n    })\n    console.log('outputArray----',outputArray,'btcAmount---',btcAmount);\n  }\n\n  render () {\n    const { btcAmount, error, outputArray } = this.state\n    return (\n      <div>\n        <h3>Find BTC by Value</h3>\n        <TextField\n          id=\"standard-search\"\n          label=\"Enter Amount\"\n          type=\"search\"\n          margin=\"normal\"\n          onChange={this._handleBtcValue}\n          value={btcAmount}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={this._findBtc} className=\"findBtcButton\">\n          Find BTC\n        </Button>\n        <p className=\"error\">{error}</p>\n        {outputArray.forEach((item, index) => {\n          return(<ul>\n\n          </ul>)\n        })}\n        <div style={classes.root}>\n          <Paper style={classes.paper}>\n            <Table style={classes.table} size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>HASH</TableCell>\n                  <TableCell>AMOUNT</TableCell>\n                  <TableCell>TIME STAMP</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {outputArray.map(btc => (\n                  <TableRow key={btc.id}>\n                    <TableCell>{btc.id}</TableCell>\n                    <TableCell>{btc.amount}</TableCell>\n                    <TableCell>{btc.timeStamp}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}