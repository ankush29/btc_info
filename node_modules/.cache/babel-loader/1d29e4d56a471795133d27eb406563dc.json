{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var utils;\n  utils = require('./utils');\n  exports.app = {\n    chunking_test: function chunking_test(req, res, _, next_filter) {\n      var write;\n      res.setHeader('Content-Type', 'application/javascript; charset=UTF-8');\n      res.writeHead(200);\n\n      write = function (_this) {\n        return function (payload) {\n          var x;\n\n          try {\n            return res.write(payload + '\\n');\n          } catch (error) {\n            x = error;\n          }\n        };\n      }(this);\n\n      utils.timeout_chain([[0, function (_this) {\n        return function () {\n          return write('h');\n        };\n      }(this)], [1, function (_this) {\n        return function () {\n          return write(Array(2049).join(' ') + 'h');\n        };\n      }(this)], [5, function (_this) {\n        return function () {\n          return write('h');\n        };\n      }(this)], [25, function (_this) {\n        return function () {\n          return write('h');\n        };\n      }(this)], [125, function (_this) {\n        return function () {\n          return write('h');\n        };\n      }(this)], [625, function (_this) {\n        return function () {\n          return write('h');\n        };\n      }(this)], [3125, function (_this) {\n        return function () {\n          write('h');\n          return res.end();\n        };\n      }(this)]]);\n      return true;\n    },\n    info: function info(req, res, _) {\n      var info;\n      info = {\n        websocket: this.options.websocket,\n        origins: !this.options.disable_cors ? ['*:*'] : void 0,\n        cookie_needed: !!this.options.jsessionid,\n        entropy: utils.random32()\n      };\n\n      if (typeof this.options.base_url === 'function') {\n        info.base_url = this.options.base_url();\n      } else if (this.options.base_url) {\n        info.base_url = this.options.base_url;\n      }\n\n      res.setHeader('Content-Type', 'application/json; charset=UTF-8');\n      res.writeHead(200);\n      return res.end(JSON.stringify(info));\n    },\n    info_options: function info_options(req, res) {\n      res.statusCode = 204;\n      res.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET');\n      res.setHeader('Access-Control-Max-Age', res.cache_for);\n      return '';\n    }\n  };\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}