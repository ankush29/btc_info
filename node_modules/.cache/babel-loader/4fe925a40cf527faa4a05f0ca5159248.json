{"ast":null,"code":"import _classCallCheck from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ankushsaini/Public/btcTransaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ankushsaini/Public/btcTransaction/src/FindBtc.js\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      width: '100%',\n      overflowX: 'auto',\n      marginBottom: theme.spacing(2)\n    },\n    table: {\n      minWidth: 650\n    }\n  };\n});\n\nvar FindBtc =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FindBtc, _React$Component);\n\n  function FindBtc(props) {\n    var _this;\n\n    _classCallCheck(this, FindBtc);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FindBtc).call(this, props));\n\n    _this._handleBtcValue = function (ev) {\n      _this.setState({\n        btcAmount: ev.target.value\n      });\n    };\n\n    _this._findBtc = function (ev) {\n      var btcAmount = _this.state.btcAmount;\n      var amountRegex = /^[+-]?\\d+(\\.\\d+)?$/.test(btcAmount);\n\n      if (amountRegex) {\n        _this._getValue(btcAmount);\n      } else {\n        _this.setState({\n          error: 'Please Enter Valid Number. eg(12,1.2,0.12)'\n        });\n      }\n    };\n\n    _this._getValue = function (btcAmount) {\n      var btcArray = _this.props.btcArray;\n      var outputArray = [];\n      var newArray = btcArray.slice();\n      var count = 0;\n\n      var _loop = function _loop() {\n        var ouput = newArray.reduce(function (prev, curr, index) {\n          return Math.abs(curr.amount - btcAmount) < Math.abs(prev.amount - btcAmount) ? curr : prev;\n        });\n        newArray = newArray.filter(function (item) {\n          if (item.id !== ouput.id) {\n            return item;\n          }\n        });\n        outputArray.push(ouput);\n        count++;\n      };\n\n      while (count < 3) {\n        _loop();\n      }\n\n      _this.setState({\n        outputArray: outputArray\n      });\n\n      console.log('outputArray----', outputArray, 'btcAmount---', btcAmount);\n    };\n\n    _this.state = {\n      btcAmount: '',\n      error: '',\n      outputArray: []\n    };\n    return _this;\n  }\n\n  _createClass(FindBtc, [{\n    key: \"render\",\n    value: function render() {\n      var btcArray = this.props.btcArray;\n      var _this$state = this.state,\n          btcAmount = _this$state.btcAmount,\n          error = _this$state.error,\n          outputArray = _this$state.outputArray;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Find BTC by Value\"), React.createElement(TextField, {\n        id: \"standard-search\",\n        label: \"Enter Amount\",\n        type: \"search\",\n        margin: \"normal\",\n        onChange: this._handleBtcValue,\n        value: btcAmount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this._findBtc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Find BTC\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, error), outputArray.forEach(function (item, index) {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        });\n      }), React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Calories\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Fat\\xA0(g)\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Carbs\\xA0(g)\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Protein\\xA0(g)\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, outputArray.map(function (btc) {\n        return React.createElement(TableRow, {\n          key: btc.if,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, btc.calories), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, btc.fat), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, btc.carbs), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, btc.protein));\n      }))))));\n    }\n  }]);\n\n  return FindBtc;\n}(React.Component);\n\nexport { FindBtc as default };","map":{"version":3,"sources":["/Users/ankushsaini/Public/btcTransaction/src/FindBtc.js"],"names":["React","TextField","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","useStyles","theme","root","width","paper","marginTop","spacing","overflowX","marginBottom","table","minWidth","FindBtc","props","_handleBtcValue","ev","setState","btcAmount","target","value","_findBtc","state","amountRegex","test","_getValue","error","btcArray","outputArray","newArray","slice","count","ouput","reduce","prev","curr","index","Math","abs","amount","filter","item","id","push","console","log","forEach","classes","map","btc","if","calories","fat","carbs","protein","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    width: '100%',\n    overflowX: 'auto',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default class FindBtc extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      btcAmount: '',\n      error: '',\n      outputArray: []\n    }\n  }\n\n  _handleBtcValue = (ev) => {\n\n    this.setState({\n      btcAmount: ev.target.value\n    })\n  }\n\n  _findBtc = (ev) => {\n    const { btcAmount } = this.state\n    const amountRegex = /^[+-]?\\d+(\\.\\d+)?$/.test(btcAmount)\n    if(amountRegex) {\n      this._getValue(btcAmount)\n    } else {\n      this.setState({\n        error: 'Please Enter Valid Number. eg(12,1.2,0.12)'\n      })\n    }\n  }\n\n  _getValue = (btcAmount) => {\n    const { btcArray } = this.props;\n    let outputArray = []\n    let newArray = btcArray.slice();\n    let count = 0;\n    while (count < 3) {\n      let ouput = newArray.reduce((prev, curr, index) => Math.abs(curr.amount - btcAmount) < Math.abs(prev.amount - btcAmount) ? curr : prev);\n      newArray = newArray.filter((item) => {\n        if(item.id !== ouput.id) {\n          return item\n        }\n      })\n      outputArray.push(ouput)\n      count++;\n    }\n    this.setState({\n      outputArray\n    })\n    console.log('outputArray----',outputArray,'btcAmount---',btcAmount);\n  }\n\n  render () {\n    const { btcArray } = this.props\n    const { btcAmount, error, outputArray } = this.state\n    return (\n      <div>\n        <h3>Find BTC by Value</h3>\n        <TextField\n          id=\"standard-search\"\n          label=\"Enter Amount\"\n          type=\"search\"\n          margin=\"normal\"\n          onChange={this._handleBtcValue}\n          value={btcAmount}\n        />\n        <button\n          type=\"button\"\n          onClick={this._findBtc}\n        >\n          Find BTC\n        </button>\n        <p>{error}</p>\n        {outputArray.forEach((item, index) => {\n          return(<ul>\n\n          </ul>)\n        })}\n        <div className={classes.root}>\n          <Paper className={classes.paper}>\n            <Table className={classes.table} size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Calories</TableCell>\n                  <TableCell>Fat&nbsp;(g)</TableCell>\n                  <TableCell>Carbs&nbsp;(g)</TableCell>\n                  <TableCell>Protein&nbsp;(g)</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {outputArray.map(btc => (\n                  <TableRow key={btc.if}>\n                    <TableCell>{btc.calories}</TableCell>\n                    <TableCell>{btc.fat}</TableCell>\n                    <TableCell>{btc.carbs}</TableCell>\n                    <TableCell>{btc.protein}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}