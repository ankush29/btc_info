{"version":3,"sources":["components/FindBtc.js"],"names":["classes","root","width","paper","overflowX","table","minWidth","FindBtc","props","_this","Object","_Users_ankushsaini_Public_btcTransaction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_ankushsaini_Public_btcTransaction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_ankushsaini_Public_btcTransaction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","_handleBtcValue","ev","setState","btcAmount","target","value","error","_findBtc","state","test","_getValue","outputArray","btcArray","newArray","slice","count","_loop","ouput","reduce","prev","curr","index","Math","abs","amount","filter","item","id","push","length","console","log","_this$state","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_6__","label","type","margin","onChange","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_13__","variant","color","onClick","className","forEach","style","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_12__","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_7__","size","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_8__","map","btc","key","timeStamp","React","Component"],"mappings":"2QAUMA,EAAU,CACdC,KAAM,CACJC,MAAO,QAETC,MAAO,CAELD,MAAO,OACPE,UAAW,QAGbC,MAAO,CACLC,SAAU,MAIOC,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAQRQ,gBAAkB,SAACC,GAEjBR,EAAKS,SAAS,CACZC,UAAWF,EAAGG,OAAOC,MACrBC,MAAO,MAbQb,EAiBnBc,SAAW,SAACN,GAAO,IACTE,EAAcV,EAAKe,MAAnBL,UACY,qBAAqBM,KAAKN,GAE5CV,EAAKiB,UAAUP,GAEfV,EAAKS,SAAS,CACZI,MAAO,6CACPK,YAAa,MAzBAlB,EA8BnBiB,UAAY,SAACP,GAKX,IALyB,IACjBS,EAAanB,EAAKD,MAAlBoB,SACJD,EAAc,GACdE,EAAWD,EAASE,QACpBC,EAAQ,EAJaC,EAAA,WAMvB,IAAIC,EAAQJ,EAASK,OAAO,SAACC,EAAMC,EAAMC,GAAb,OAAuBC,KAAKC,IAAIH,EAAKI,OAASrB,GAAamB,KAAKC,IAAIJ,EAAKK,OAASrB,GAAaiB,EAAOD,IAClIN,EAAWA,EAASY,OAAO,SAACC,GAC1B,OAAGA,EAAKC,KAAOV,EAAMU,IACZD,IAKXf,EAAYiB,KAAKX,GACjBF,KAVKA,EAAQ,GAAKF,EAASgB,QAAQb,IAYrCvB,EAAKS,SAAS,CACZS,gBAEFmB,QAAQC,IAAI,kBAAkBpB,EAAY,eAAeR,IAhDzDV,EAAKe,MAAQ,CACXL,UAAW,GACXG,MAAO,GACPK,YAAa,IALElB,wEAqDT,IAAAuC,EACkCpC,KAAKY,MAAvCL,EADA6B,EACA7B,UAAWG,EADX0B,EACW1B,MAAOK,EADlBqB,EACkBrB,YAC1B,OACEsB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACET,GAAG,kBACHU,MAAM,eACNC,KAAK,SACLC,OAAO,SACPC,SAAU5C,KAAKI,gBACfK,MAAOF,IAET8B,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAShD,KAAKW,SAAUsC,UAAU,iBAA9E,YAGAZ,EAAAC,EAAAC,cAAA,KAAGU,UAAU,SAASvC,GACrBK,EAAYmC,QAAQ,SAACpB,EAAML,GAC1B,OAAOY,EAAAC,EAAAC,cAAA,aAITF,EAAAC,EAAAC,cAAA,OAAKY,MAAO/D,EAAQC,MAClBgD,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOD,MAAO/D,EAAQG,OACpB8C,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOF,MAAO/D,EAAQK,MAAO6D,KAAK,SAChCjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACEnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,aACApB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,eACApB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,qBAGJpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACG3C,EAAY4C,IAAI,SAAAC,GAAG,OAClBvB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAUK,IAAKD,EAAI7B,IACjBM,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KAAYG,EAAI7B,IAChBM,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KAAYG,EAAIhC,QAChBS,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KAAYG,EAAIE,0BA3FCC,IAAMC","file":"static/js/findBtc.8b098f31.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nconst classes = {\n  root: {\n    width: '100%',\n  },\n  paper: {\n    // marginTop: theme.spacing(3),\n    width: '100%',\n    overflowX: 'auto',\n    // marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 650,\n  },\n};\n\nexport default class FindBtc extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      btcAmount: '',\n      error: '',\n      outputArray: []\n    }\n  }\n\n  _handleBtcValue = (ev) => {\n\n    this.setState({\n      btcAmount: ev.target.value,\n      error: ''\n    })\n  }\n\n  _findBtc = (ev) => {\n    const { btcAmount } = this.state\n    const amountRegex = /^[+-]?\\d+(\\.\\d+)?$/.test(btcAmount)\n    if(amountRegex) {\n      this._getValue(btcAmount)\n    } else {\n      this.setState({\n        error: 'Please Enter Valid Number. eg(12,1.2,0.12)',\n        outputArray: []\n      })\n    }\n  }\n\n  _getValue = (btcAmount) => {\n    const { btcArray } = this.props;\n    let outputArray = []\n    let newArray = btcArray.slice();\n    let count = 0;\n    while (count < 3 && newArray.length) {\n      let ouput = newArray.reduce((prev, curr, index) => Math.abs(curr.amount - btcAmount) < Math.abs(prev.amount - btcAmount) ? curr : prev);\n      newArray = newArray.filter((item) => {\n        if(item.id !== ouput.id) {\n          return item\n        } else {\n          return false\n        }\n      })\n      outputArray.push(ouput)\n      count++;\n    }\n    this.setState({\n      outputArray\n    })\n    console.log('outputArray----',outputArray,'btcAmount---',btcAmount);\n  }\n\n  render () {\n    const { btcAmount, error, outputArray } = this.state\n    return (\n      <div>\n        <h3>Find BTC by Value</h3>\n        <TextField\n          id=\"standard-search\"\n          label=\"Enter Amount\"\n          type=\"search\"\n          margin=\"normal\"\n          onChange={this._handleBtcValue}\n          value={btcAmount}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={this._findBtc} className=\"findBtcButton\">\n          Find BTC\n        </Button>\n        <p className=\"error\">{error}</p>\n        {outputArray.forEach((item, index) => {\n          return(<ul>\n\n          </ul>)\n        })}\n        <div style={classes.root}>\n          <Paper style={classes.paper}>\n            <Table style={classes.table} size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>HASH</TableCell>\n                  <TableCell>AMOUNT</TableCell>\n                  <TableCell>TIME STAMP</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {outputArray.map(btc => (\n                  <TableRow key={btc.id}>\n                    <TableCell>{btc.id}</TableCell>\n                    <TableCell>{btc.amount}</TableCell>\n                    <TableCell>{btc.timeStamp}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </div>\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}