{"version":3,"sources":["App.js","store/appReducer.js","store/configureStore.js","index.js"],"names":["websocket","BtcChart","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","loading","react_default","a","createElement","modules","FindBtc","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","window","addEventListener","_restart","_stop","WebSocket","onopen","setState","connectionStatus","_start","onerror","close","onclose","onmessage","event","btcData","JSON","parse","data","op","_updateBtcArray","send","btcArray","state","btcArrayCopy","toConsumableArray","timeStamp","x","time","btcHash","hash","out","btcTotalAmount","i","length","value","btcObject","id","amount","_Unix_timestamp","push","shift","t","dt","Date","hr","getHours","m","getMinutes","s","getSeconds","substr","_this$state","className","NavLink","to","exact","activeClassName","activeStyle","color","Switch","Route","path","render","assign","Component","withRouter","connect","initialState","message","fetching","createStoreWithMiddleware","compose","applyMiddleware","ReduxThunk","store","next","action","console","group","type","info","result","log","getState","groupEnd","createStore","rootReducer","combineReducers","app","arguments","undefined","objectSpread","payload","configureStore","AppBundle","es","BrowserRouter","es6","src_App_0","onload","preloadReady","renderMethod","ReactDOM","hydrate","document","getElementById"],"mappings":"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","file":"static/js/main.120bec8c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Loadable from 'react-loadable';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { Route, Switch, NavLink } from 'react-router-dom';\n\nimport './App.scss';\n\nlet websocket;\n\nconst BtcChart = Loadable({\n  loader: () => import(/* webpackChunkName: \"btcChart\" */ './components/BtcChart'),\n  loading: () => <div>loading page...</div>,\n  modules: ['btcChart'],\n});\n\nconst FindBtc = Loadable({\n  loader: () => import(/* webpackChunkName: \"findBtc\" */ './components/FindBtc'),\n  loading: () => <div>loading another page...</div>,\n  modules: ['findBtc'],\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      connectionStatus: 'connecting...',\n      btcArray: []\n    };\n  }\n\n  componentDidMount = () => {\n    window.addEventListener('online',  this._restart);\n    window.addEventListener('offline', this._stop);\n\n    websocket = new WebSocket('wss://ws.blockchain.info/inv');\n\n    websocket.onopen = () => {\n      this.setState({\n        connectionStatus: 'connected'\n      })\n      this._start()\n    };\n\n    websocket.onerror = () => {\n      websocket.close();\n      this._stop()\n    };\n\n    websocket.onclose = () => {\n      this._stop()\n    };\n\n    websocket.onmessage = (event) => {\n      let btcData = JSON.parse(event.data)\n      if (btcData.op === 'utx'){\n        this._updateBtcArray(btcData)\n      }\n    }\n  }\n\n  _start = () => {\n    websocket.send('{\"op\":\"unconfirmed_sub\"}');\n  }\n\n  _restart = () => {\n    this.setState({\n      connectionStatus: 'connected'\n    })\n  }\n\n  _stop = (event) => {\n    this.setState({\n      connectionStatus: 'disconnected'\n    })\n  }\n\n  _updateBtcArray = (btcData) => {\n    const { btcArray } = this.state\n    let btcArrayCopy = [...btcArray]\n    let timeStamp = btcData.x.time;\n    let btcHash = btcData.x.hash;\n    let out = btcData.x.out;\n    let btcTotalAmount = 0;\n    for(let i = 0; i < out.length; i++){\n      btcTotalAmount += out[i].value;\n    }\n    btcTotalAmount /= 100000000;\n    var btcObject = { id: btcHash, amount: btcTotalAmount, timeStamp: this._Unix_timestamp(timeStamp) };\n    if(btcTotalAmount > 1) {\n      btcArrayCopy.push(btcObject);\n    }\n    if (btcArrayCopy.length > 10) {\n      btcArrayCopy.shift();\n    }\n   this.setState({\n     btcArray: [...btcArrayCopy]\n   })\n  }\n\n  _Unix_timestamp (t) {\n    let dt = new Date(t*1000);\n    let hr = dt.getHours();\n    let m = \"0\" + dt.getMinutes();\n    let s = \"0\" + dt.getSeconds();\n    return hr+ ':' + m.substr(-2) + ':' + s.substr(-2);\n  }\n\n  render() {\n    const { connectionStatus, btcArray } = this.state\n    return (\n      <div className=\"App\">\n        <div className=\"App-intro\">\n          <nav>\n            <NavLink to=\"/\" exact activeClassName=\"active\" activeStyle={{ color: '#1569c7' }} className=\"NavLink\">\n              Home\n            </NavLink>\n            <NavLink to=\"/searchBtc\" activeClassName=\"active\" activeStyle={{ color: '#1569c7'}} className=\"NavLink\">\n              FindBtc\n            </NavLink>\n          </nav>\n          <p>status: {connectionStatus}</p>\n          <Switch>\n            <Route path=\"/\" exact render={(props) => { return <BtcChart {...props} btcArray={btcArray} />}} />\n            <Route path=\"/searchBtc\" render={(props) => { return <FindBtc {...props} btcArray={btcArray} />}} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    null,\n    null\n  )(App),\n);\n","const initialState = {\n  message: null,\n  fetching: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_MESSAGE':\n      return {\n        ...state,\n        message: action.message,\n      };\n    case 'LOADER_START':\n      return {\n        ...state,\n        fetching: action.payload,\n      };\n\n    case 'LOADER_STOP':\n      // debugger\n      return {\n        ...state,\n        fetching: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  createStore, combineReducers, compose, applyMiddleware,\n} from 'redux';\n\nimport ReduxThunk from 'redux-thunk';\n// import axios from 'axios';\n\nimport appReducer from './appReducer';\n\n/**\n * Logs all actions and states after they are dispatched.\n */\nconst logger = store => next => (action) => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  const result = next(action);\n  console.log('next state', store.getState());\n  console.groupEnd();\n  return result;\n};\n\n// if you're also using redux-thunk, add it as a middleware\nconst createStoreWithMiddleware = compose(applyMiddleware(ReduxThunk, logger))(\n  createStore,\n);\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n});\n\nfunction configureStore(initialState = {}) {\n  return createStoreWithMiddleware(rootReducer, initialState);\n}\n\nconst store = module.hot\n  ? configureStore(window.__REDUX_STATE__ || {})\n  : configureStore({});\n\nexport { configureStore, store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Loadable from 'react-loadable';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { CookiesProvider } from 'react-cookie';\n\n// import './index.scss';\nimport App from './App';\nimport { store } from './store/configureStore';\n// import registerServiceWorker from './registerServiceWorker';\n\n// const store = configureStore(window.__REDUX_STATE__ || {});\n\nconst AppBundle = (\n  <ReduxProvider store={store}>\n    <BrowserRouter>\n      <CookiesProvider>\n        <App />\n      </CookiesProvider>\n    </BrowserRouter>\n  </ReduxProvider>\n);\n\nwindow.onload = () => {\n  Loadable.preloadReady().then(() => {\n    const renderMethod = module.hot ? ReactDOM.render : ReactDOM.hydrate;\n    renderMethod(AppBundle, document.getElementById('root'));\n  });\n};\n\n// registerServiceWorker();\n"],"sourceRoot":""}